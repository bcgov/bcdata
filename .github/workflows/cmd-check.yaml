on:
  push: ~
  pull_request: ~
  schedule:
    - cron: '30 4 * * 1'

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: '3.6', args: "'--no-manual'"}
        - { os: macOS-latest, r: '3.6', args: "c('--no-manual', '--test-dontrun')", sf_args: "--with-proj-lib=/usr/local/lib/"}
        - { os: ubuntu-16.04, r: '3.4', args: "'--no-manual'"}
        - { os: ubuntu-16.04, r: '3.5', args: "'--no-manual'"}
        - { os: ubuntu-16.04, r: '3.6'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: r-lib/actions/setup-tinytex@master
        if: contains(matrix.config.args, 'no-manual') == false

      - name: Install texlive-scripts
        # work around https://github.com/yihui/tinytex/issues/173 to make sure
        # fonts are installed for building manual
        if: contains(matrix.config.args, 'no-manual') == false
        run: |
          tlmgr install texlive-scripts

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('DESCRIPTION') }}

      - name: install macOS system dependencies
        if: runner.os == 'macOS'
        continue-on-error: true
        run: |
          brew install pkg-config gdal udunits

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get -y update
          sudo apt-get -y install libgdal-dev gdal-bin libgeos-dev \
          libgeos++-dev libproj-dev libudunits2-dev \
          libcurl4-openssl-dev libssl-dev libprotobuf-dev protobuf-compiler \
          libprotoc-dev libxml2 libxml2-dev git-core

      - name: Install dependencies
        run: |
          install.packages(c('remotes', 'rcmdcheck'))
          remotes::install_deps(dependencies = TRUE, configure.args = c('sf' = '${{ matrix.config.sf_args }}'))
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = ${{ matrix.config.args }}, error_on = 'warning', check_dir = 'check')
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == '3.6'
        run: |
          remotes::install_github("r-lib/covr@gh-actions")
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}
